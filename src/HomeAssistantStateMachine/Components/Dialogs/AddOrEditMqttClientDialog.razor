@using HomeAssistantStateMachine.Models
@inherits ResultDialogBase<MqttClient>

<RadzenTemplateForm @ref="Form" Data="@Model" TItem="MqttClient">
    <RadzenStack>
        <RadzenFormField Text="Name *" Variant="@Variant.Outlined">
            <ChildContent>
                <RadzenTextBox @bind-Value="@Model!.Name" Name="Name" Placeholder="name" />
            </ChildContent>
            <Helper>
                <RadzenRequiredValidator Component="Name" Text="This field is required" />
                <RadzenCustomValidator Component="Name" Validator="@(() => !ExistingMqttClientNames.Contains(Model!.Name))" Text="Name should be unique" />
            </Helper>
        </RadzenFormField>
        <RadzenFormField Text="Host *" Variant="@Variant.Outlined">
            <ChildContent>
                <RadzenTextBox @bind-Value="@Model!.Host" Name="Host" Placeholder="http://localhost:8123" />
            </ChildContent>
            <Helper>
                <RadzenRequiredValidator Component="Host" Text="This field is required" />
            </Helper>
        </RadzenFormField>
        <RadzenFormField Text="Tls" Variant="@Variant.Outlined">
            <RadzenRadioButtonList @bind-Value="@Model!.Tls" TValue="bool" class="rz-m-4 rz-mt-8">
                <Items>
                    <RadzenRadioButtonListItem Text="Yes" Value="true" />
                    <RadzenRadioButtonListItem Text="No" Value="false" />
                </Items>
            </RadzenRadioButtonList>
        </RadzenFormField>
        <RadzenFormField Text="Username" Variant="@Variant.Outlined">
            <RadzenTextBox @bind-Value="@Model!.Username" Name="Username" Placeholder="Username" />
        </RadzenFormField>
        <RadzenFormField Text="Password" Variant="@Variant.Outlined">
            <RadzenPassword @bind-Value="@Model!.Password" Name="Password" />
        </RadzenFormField>
        <RadzenFormField Text="Enabled" Variant="@Variant.Outlined">
            <RadzenRadioButtonList @bind-Value="@Model!.Enabled" TValue="bool" class="rz-m-4 rz-mt-8">
                <Items>
                    <RadzenRadioButtonListItem Text="Yes" Value="true" />
                    <RadzenRadioButtonListItem Text="No" Value="false" />
                </Items>
            </RadzenRadioButtonList>
        </RadzenFormField>
        <RadzenButton ButtonType="ButtonType.Button" Text="OK" Click="@OnSubmit" />
    </RadzenStack>
</RadzenTemplateForm>


@code {
    protected override bool ShowClose => true;
    protected override bool IsPersistent => false;
    protected override bool CloseDialogOnOverlayClick => true;
    protected override int? WidthInPixels => 1400;

    [Parameter]
    public MqttClient? MqttClient { get; set; }

    [Parameter]
    public HashSet<string> ExistingMqttClientNames { get; set; } = [];

    private MqttClient? Model;
    private RadzenTemplateForm<MqttClient>? Form;

    protected override void OnInitialized()
    {
        if (MqttClient == null)
        {
            MqttClient = new MqttClient();
        }
        Model = MqttClient.CopyObject();
        base.OnInitialized();
    }

    void OnSubmit()
    {
        Form!.EditContext.Validate();
        if (Form.IsValid)
        {
            Close(Model);
        };
    }

}
