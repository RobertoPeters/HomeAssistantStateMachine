@using Hasm.Models
@inherits ResultDialogBase<Transition>

<RadzenTemplateForm @ref="Form" Data="@Model" TItem="Transition">
    <RadzenStack>
        <RadzenFormField Text="Description" Variant="@Variant.Outlined">
            <RadzenTextArea @bind-Value="@Model!.Description" Name="Description" Rows="3" spellcheck="false" />
        </RadzenFormField>
        <RadzenFormField Text="Condition" Variant="@Variant.Outlined">
            <RadzenTextArea @bind-Value="@Model!.Condition" Name="Condition" Rows="10" spellcheck="false" />
        </RadzenFormField>
    </RadzenStack>
    <RadzenButton ButtonType="ButtonType.Button" Text="OK" Click="@OnSubmit" />
    <RadzenButton ButtonType="ButtonType.Button" Text="Script" Click="@(() => ShowStateMachineScript.InvokeAsync())" />
</RadzenTemplateForm>


@code {
    protected override bool ShowClose => true;
    protected override bool IsPersistent => false;
    protected override bool CloseDialogOnOverlayClick => true;
    protected override int? WidthInPixels => 1400;

    [Parameter]
    public Transition? Transition { get; set; }

    [Parameter]
    public EventCallback ShowStateMachineScript { get; set; }

    private Transition? Model;
    private RadzenTemplateForm<Transition>? Form;

    protected override void OnInitialized()
    {
        if (Transition == null)
        {
            Transition = new Transition();
        }
        Model = Transition.CopyObject();
        base.OnInitialized();
    }

    void OnSubmit()
    {
        Form!.EditContext.Validate();
        if (Form.IsValid)
        {
            Close(Model);
        };
    }

}
