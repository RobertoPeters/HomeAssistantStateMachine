@using Hasm.Models
@inherits ResultDialogBase<string?>

<style>
    .my-editor-class {
        height: 600px;
    }
</style>

@if (string.IsNullOrEmpty(SystemScript))
{
    <StandaloneCodeEditor @ref="standaloneCodeEditor"
                          CssClass="my-editor-class"
                          ConstructionOptions="EditorConstructionOptions" />
}
else
{
    <RadzenSplitter Orientation="Radzen.Orientation.Horizontal">
        <RadzenSplitterPane Min="10px">
            <StandaloneCodeEditor @ref="standaloneCodeEditor"
                                  CssClass="my-editor-class"
                                  ConstructionOptions="EditorConstructionOptions" />
        </RadzenSplitterPane>
        <RadzenSplitterPane Size="100px" Min="10px">
            <StandaloneCodeEditor CssClass="my-editor-class"
                                  ConstructionOptions="SystemScriptEditorConstructionOptions" />
        </RadzenSplitterPane>
    </RadzenSplitter>
}

@if (!ReadOnly)
{
    <RadzenButton Click="@(async () => Close(await standaloneCodeEditor!.GetValue()))"
                  Text="OK" />
}
<RadzenButton Click="@(() => Close(null))"
              ButtonStyle="ButtonStyle.Secondary"
              Text="Cancel" />

@code {
    protected override bool ShowClose => true;
    protected override bool IsPersistent => false;
    protected override bool CloseDialogOnOverlayClick => true;
    protected override int? WidthInPixels => 1400;

    private StandaloneCodeEditor? standaloneCodeEditor;

    [Parameter]
    public string? Script { get; set; }

    [Parameter]
    public bool ReadOnly { get; set; }

    [Parameter]
    public string? SystemScript { get; set; }

    private StandaloneEditorConstructionOptions EditorConstructionOptions(StandaloneCodeEditor editor)
    {
        return new StandaloneEditorConstructionOptions
        {
            AutomaticLayout = true,
            Language = "javascript",
            Value = Script ?? "",
            ReadOnly = ReadOnly
        };
    }

    private StandaloneEditorConstructionOptions SystemScriptEditorConstructionOptions(StandaloneCodeEditor editor)
    {
        return new StandaloneEditorConstructionOptions
        {
            AutomaticLayout = true,
            Language = "javascript",
            Value = SystemScript ?? "",
            ReadOnly = ReadOnly
        };
    }

}
