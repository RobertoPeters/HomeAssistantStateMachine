@using Hasm.Components.Dialogs
@using Hasm.Models
@using Hasm.Services
@using Hasm.Services.Automations
@using Hasm.Services.Automations.Flow
@inject Services.DataService DataService
@inherits ResultDialogBase<StepSetVariableValue>

<RadzenTemplateForm @ref="Form" Data="@Model" TItem="StepSetVariableValue">
    <RadzenStack>
        <RadzenFormField Text="Name" Variant="@Variant.Outlined">
            <RadzenTextBox @bind-Value="@Model!.Name" Name="Name" spellcheck="false" />
        </RadzenFormField>
        <RadzenFormField Text="Variable name *" Variant="@Variant.Outlined">
            <ChildContent>
                <RadzenTextBox @bind-Value="@Model!.VariableName" Name="VariableName" spellcheck="false" />
            </ChildContent>
            <Helper>
                <RadzenRequiredValidator Component="VariableName" Text="This field is required" />
            </Helper>
        </RadzenFormField>
        <RadzenFormField Text="Client *" Variant="@Variant.Outlined">
            <ChildContent>
                <RadzenDropDown Data="Clients" @bind-Value="@Model!.ClientName" Name="ClientName" ValueProperty="@nameof(Client.Name)" TextProperty="@nameof(Client.Name)" />
            </ChildContent>
            <Helper>
                <RadzenRequiredValidator Component="ClientName" Text="This field is required" />
            </Helper>
        </RadzenFormField>
        <RadzenFormField Text="Is global variabe" Variant="@Variant.Outlined">
            <RadzenRadioButtonList @bind-Value="@Model!.IsGlobalVariable" TValue="bool" class="rz-m-4 rz-mt-8">
                <Items>
                    <RadzenRadioButtonListItem Text="Yes" Value="true" />
                    <RadzenRadioButtonListItem Text="No" Value="false" />
                </Items>
            </RadzenRadioButtonList>
        </RadzenFormField>
        <RadzenFormField Text="Payload as value" Variant="@Variant.Outlined">
            <RadzenRadioButtonList @bind-Value="@Model!.PayloadAsValue" TValue="bool" class="rz-m-4 rz-mt-8">
                <Items>
                    <RadzenRadioButtonListItem Text="Yes" Value="true" />
                    <RadzenRadioButtonListItem Text="No" Value="false" />
                </Items>
            </RadzenRadioButtonList>
        </RadzenFormField>
        @if (!Model!.PayloadAsValue)
        {
            <RadzenFormField Text="Value *" Variant="@Variant.Outlined">
                <ChildContent>
                    <RadzenTextBox @bind-Value="@Model!.VariableValue" Name="VariableValue" spellcheck="false" />
                </ChildContent>
                <Helper>
                    <RadzenRequiredValidator Component="VariableValue" Text="This field is required" />
                </Helper>
            </RadzenFormField>
        }
    </RadzenStack>
    <RadzenButton ButtonType="ButtonType.Button" Text="OK" Click="@OnSubmit" />
</RadzenTemplateForm>


@code {
    protected override bool ShowClose => true;
    protected override bool IsPersistent => false;
    protected override bool CloseDialogOnOverlayClick => true;
    protected override int? WidthInPixels => 1400;

    [Parameter]
    public StepSetVariableValue? Step { get; set; }

    [Parameter]
    public Automation? Automation { get; set; }


    private StepSetVariableValue? Model;
    private RadzenTemplateForm<StepSetVariableValue>? Form;
    private List<Client>? Clients;

    protected override void OnInitialized()
    {
        Clients = DataService.GetClients();
        if (Step == null)
        {
            Step = new StepSetVariableValue();
            Step.StepData.Type = Step.GetType();
            Step.Initialize();
        }
        Model = Step.CopyObject();

        base.OnInitialized();
    }

    void OnSubmit()
    {
        Form!.EditContext.Validate();
        if (Form.IsValid)
        {
            Close(Model);
        }
    }

}
