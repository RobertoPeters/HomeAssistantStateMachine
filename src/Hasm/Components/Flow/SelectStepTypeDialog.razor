@using Hasm.Components.Dialogs
@inherits ResultDialogBase<string>


<RadzenTemplateForm @ref="Form" Data="@selectedStepType" TItem="string">
	<RadzenStack>
		<RadzenFormField Text="Step" Variant="@Variant.Outlined">
			<RadzenDropDown @bind-Value="@selectedStepType"
						   Name="Step"
						   Style="width: 100%;"
						   Multiple="false"
						   Data="@StepTypes"
						   TextProperty="Value"
						   ValueProperty="Key"
						   AllowFiltering=true />
		</RadzenFormField>
	</RadzenStack>
	<RadzenButton ButtonType="ButtonType.Button" Text="OK" Click="@OnSubmit" />
</RadzenTemplateForm>

@code {
	[Parameter]
	public Dictionary<string, string> StepTypes { get; set; } = [];

	protected override bool ShowClose => true;
	protected override bool IsPersistent => false;
	protected override bool CloseDialogOnOverlayClick => true;
	protected override int? WidthInPixels => 700;
	protected override int? HeightInPixels => 300;

	private RadzenTemplateForm<string>? Form;
	private string? selectedStepType = null;

	void OnSubmit()
	{
		Form!.EditContext.Validate();
		if (Form.IsValid)
		{
			Close(selectedStepType);
		}
	}
}
